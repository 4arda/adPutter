<?php

namespace AppBundle\Repository;

use Doctrine\ORM\EntityRepository;

/**
 * OfferRepository
 *
 * This class was generated by the Doctrine ORM. Add your own custom
 * repository methods below.
 */
class OfferRepository extends EntityRepository
{
    public function findAllActual()
    {
        $now = new \DateTime();
        return $this->getEntityManager()
            ->createQuery(
                'SELECT o FROM AppBundle:Offer o 
                      WHERE o.expireDate > :now 
                      ORDER BY o.createDate DESC'
            )
            ->setParameter('now', $now->format("Y-m-d H:i:s"))
            ->getResult();
    }

    public function findAllByCategoryId($id)
    {
        return $this->getEntityManager()
            ->createQuery(
                'SELECT o FROM AppBundle:Offer o 
                      LEFT JOIN o.categories c
                      LEFT JOIN c.parent p
                      WHERE o.expireDate > :now
                      AND (c.id =:id OR p.id=:id)
                      ORDER BY o.createDate DESC'
            )
            ->setParameter('id', $id)
            ->setParameter('now', new \DateTime())
            ->getResult();
    }

    public function findAllByUserAndCategoryId($id, $userId)
    {

        return $this->getEntityManager()
            ->createQuery(
                'SELECT o, c FROM AppBundle:Offer o 
                      LEFT JOIN o.categories c
                      WHERE c.id =:id
                      AND o.user=:userId
                      ORDER BY o.createDate DESC'
            )
            ->setParameter('id', $id)
            ->setParameter('userId', $userId)
            ->getResult();
    }

    public function findUserOffer($id,$userId)
    {
        return $this->getEntityManager()
            ->createQuery(
                'SELECT o FROM AppBundle:Offer o 
                      WHERE o.id =:id AND o.user=:userId'
            )
            ->setParameter('id', $id)
            ->setParameter('userId', $userId)
            ->getResult();
    }

    public function findAllUserOffers($userId)
    {
        return $this->getEntityManager()
            ->createQuery(
                'SELECT o FROM AppBundle:Offer o 
                      WHERE o.user=:userId
                      ORDER BY o.createDate DESC'
            )
            ->setParameter('userId', $userId)
            ->getResult();
    }
}
